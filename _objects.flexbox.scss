/*------------------------------------*\
    #FLEXBOX
\*------------------------------------*/

// Predefine the variables below in order to alter and enable specific features.
$inuit-flexbox-namespace:    $inuit-namespace !default;

$inuit-flexbox-spacing-unit: $inuit-base-spacing-unit !default;

//------------------------------------
// Mixins
//------------------------------------

@mixin flexbox() {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}

@mixin flex($values) {
  -webkit-box-flex: $values;
  -moz-box-flex: $values;
  -webkit-flex: $values;
  -ms-flex: $values;
  flex: $values;
}

@mixin order($val) {
  -webkit-box-ordinal-group: $val;
  -moz-box-ordinal-group: $val;
  -ms-flex-order: $val;
  -webkit-order: $val;
  order: $val;
}

/**
 * Row
 *
 * 1. Defines the default behaviour for how flex items are laid out along the
 *    cross axis on the current line. Item are aligned at the top. Items are
 *    aligned to the top.
 * 2. Defines the alignment along the main axis. Items are aligne on the left.
 */
.#{$inuit-flexbox-namespace}flex {
  @include flexbox();
  flex-direction: row;
  flex-wrap: wrap;
  align-items: flex-start; /* [1] */
  justify-content: flex-start; /* [2]*/
  margin-right: -$inuit-flexbox-spacing-unit;
  margin-left: -$inuit-flexbox-spacing-unit;
}

$i: 1;
@while $i <= 12 {
  /**
   * Flex items #{$i} column width
   */
  .flex__item--#{$i} {
    $flex-basis: 100/12*$i*1%;
    @include flex(0 1 $flex-basis);
    padding-right: $inuit-flexbox-spacing-unit;
    padding-left: $inuit-flexbox-spacing-unit;
  }
$i: $i + 1;
}
